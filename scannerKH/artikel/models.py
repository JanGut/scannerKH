from django.db import models
from grosshaendler.models import Grosshaendler


class Artikel(models.Model):
    # After the bnn-3 specification with an additional wholesaler field
    artikel_nr = models.CharField(verbose_name='Artikelnummer', max_length=14, primary_key=True)
    aenderungskennung = models.CharField(verbose_name='Änderungskennung: N=neu, A=Änderung, X=ausgelistet, R=Restbestand, V=vorübergehend ausgelistet, W=wiedergelistet', max_length=1)
    aenderungsdatum = models.IntegerField(verbose_name='Änderungsdatum: JJJJMMTT')
    aenderungszeit = models.IntegerField(verbose_name='Änderungszeit: SSMM')
    ean_laden = models.BigIntegerField(verbose_name='EANladen')
    ean_bestell = models.BigIntegerField(verbose_name='EANbestell')
    bezeichnung = models.CharField(verbose_name='Bezeichnung', max_length=50)
    bezeichnung2 = models.CharField(verbose_name='Bezeichnung2', max_length=50)
    bezeichnung3 = models.CharField(verbose_name='Bezeichnung3', max_length=30)
    handelsklasse = models.CharField(verbose_name='Handelsklasse: I, II, III, IV, ...', max_length=5)
    hersteller_inverkehrbringer = models.CharField(verbose_name='Hersteller/Inverkehrbringer', max_length=4)
    hersteller = models.CharField(verbose_name='Hersteller', max_length=4)
    herkunft = models.CharField(verbose_name='Herkunft', max_length=3)
    qualitaet = models.CharField(verbose_name='Qualität', max_length=4)
    kontrollstelle = models.CharField(verbose_name='Kontrollstelle', max_length=15)
    mhd_restlaufzeit = models.IntegerField(verbose_name='MHD-Restlaufzeit in Tagen')
    wg_bnn = models.IntegerField(verbose_name='Warengruppe BNN')
    wg_ifh = models.IntegerField(verbose_name='Warengruppe IfH')
    wg_gh = models.IntegerField(verbose_name='Warengruppe Großhändler')
    ersatz_artikel_nr = models.CharField(verbose_name='Ersate-Artikelnummer', max_length=14)
    min_bestell_menge = models.IntegerField(verbose_name='MinBestellMenge in Bestelleinheit')
    bestelleinheit = models.CharField(verbose_name='Bestelleinheit', max_length=15)
    bestelleinheits_menge = models.IntegerField(verbose_name='Bestelleinheits-Menge: Anzahl Ladeneinheiten je Bestelleinheit')
    ladeneinheit = models.CharField(verbose_name='Ladeneinheit', max_length=10)
    mengenfaktor = models.IntegerField(verbose_name='Mengenfaktor')
    gewichtsartikel = models.CharField(verbose_name='Gewichtsartikel: J/N', max_length=1)
    pfand_nr_ladeneinheit = models.CharField(verbose_name='PfandNrLadeneinheit', max_length=10)
    pfand_nr_bestelleinheit = models.CharField(verbose_name='PfandNrBestelleinheit', max_length=10)
    gewicht_ladeneinheit = models.IntegerField(verbose_name='GewichtLadeneinheit')
    gewicht_bestelleinheit = models.IntegerField(verbose_name='GewichtBestelleinheit')
    breite = models.IntegerField(verbose_name='Breite')
    hoehe = models.IntegerField(verbose_name='Höhe')
    tiefe = models.IntegerField(verbose_name='Tiefe')
    mwst_kennung = models.IntegerField(verbose_name='MwstKennung: 1=reduziert, 2=voll, 3=LandwirtsSatz')
    vk_festpreis = models.IntegerField(verbose_name='VkFestpreis')
    empf_vk = models.IntegerField(verbose_name='EmpfVk')
    empf_vk_gh = models.IntegerField(verbose_name='EmpfVkGH')
    preis = models.IntegerField(verbose_name='Preis')
    rabattfaehig = models.CharField(verbose_name='rabattfähig', max_length=1)
    skontierfaehig = models.CharField(verbose_name='skontierfähig', max_length=1)
    staffel_menge1 = models.IntegerField(verbose_name='StaffelMenge1: in Ladeneinheit')
    staffel_preis1 = models.IntegerField(verbose_name='StaffelPreis1: je Ladeneinheit o. MWSt')
    rabattfaehig1 = models.CharField(verbose_name='rabattfähig1', max_length=1)
    skontierfaehig1 = models.CharField(verbose_name='skontierfähig1', max_length=1)
    staffel_menge2 = models.IntegerField(verbose_name='StaffelMenge2: in Ladeneinheit')
    staffel_preis2 = models.IntegerField(verbose_name='StaffelPreis2: je Ladeneinheit o. MWSt')
    rabattfaehig2 = models.CharField(verbose_name='rabattfähig2', max_length=1)
    skontierfaehig2 = models.CharField(verbose_name='skontierfähig2', max_length=1)
    staffel_menge3 = models.IntegerField(verbose_name='StaffelMenge3: in Ladeneinheit')
    staffel_preis3 = models.IntegerField(verbose_name='StaffelPreis3: je Ladeneinheit o. MWSt')
    rabattfaehig3 = models.CharField(verbose_name='rabattfähig3', max_length=1)
    skontierfaehig3 = models.CharField(verbose_name='skontierfähig3', max_length=1)
    staffel_menge4 = models.IntegerField(verbose_name='StaffelMenge4: in Ladeneinheit')
    staffel_preis4 = models.IntegerField(verbose_name='StaffelPreis4: je Ladeneinheit o. MWSt')
    rabattfaehig4 = models.CharField(verbose_name='rabattfähig4', max_length=1)
    skontierfaehig4 = models.CharField(verbose_name='skontierfähig4', max_length=1)
    staffel_menge5 = models.IntegerField(verbose_name='StaffelMenge5: in Ladeneinheit')
    staffel_preis5 = models.IntegerField(verbose_name='StaffelPreis5: je Ladeneinheit o. MWSt')
    rabattfaehig5 = models.CharField(verbose_name='rabattfähig5', max_length=1)
    skontierfaehig5 = models.CharField(verbose_name='skontierfähig5', max_length=1)
    artikelart = models.CharField(verbose_name='Artikelart: F=Frische, T=Trocken, W=NaturWaren, P=Pfand, A=Artikel aus FrischePreisliste (aktuellesAngebot)', max_length=1)
    aktionspreis = models.CharField(verbose_name='Aktionspreis: A', max_length=1)
    aktionspreis_gueltig_ab = models.IntegerField(verbose_name='AktionspreisGültigAb: JJJJMMTT, 0/leer=ab sofort')
    aktionspreis_gueltig_bis = models.IntegerField(verbose_name='AktionspreisGültigBis: JJJJMMTT, 0/leer=unbestimmt')
    empf_vk_aktion = models.IntegerField(verbose_name='empfVk-Aktion')
    grundpreis_einheit = models.CharField(verbose_name='Grundpreiseinheit', max_length=10)
    grundpreis_faktor = models.IntegerField(verbose_name='Grundpreis-Faktor')
    lieferbar_ab = models.IntegerField(verbose_name='LieferbarAb: JJJJMMTT')
    lieferbar_bis = models.IntegerField(verbose_name='LieferbarBis: JJJJMMTT')

    grosshaendler = models.ForeignKey(Grosshaendler, on_delete=models.DO_NOTHING)

    def __str__(self):
        return f"ARTIKEL-NR: {self.artikel_nr}, BEZEICHNUNG: {self.bezeichnung}, GROßHÄNDLER: {self.grosshaendler.__str__()}"
